Class Rush.Covid19.US.Utils
{

// Arun Kumar Tiriveedhi, 06Apr20, Rush University Medical Center, Created new class for the COVID cases graph for US, can filter by State or County

Parameter TSConfirmed = "csse_covid_19_time_series/time_series_covid19_confirmed_US.csv";

Parameter TSDeaths = "csse_covid_19_time_series/time_series_covid19_deaths_US.csv";

Parameter TSrecovered = "csse_covid_19_time_series/time_series_covid19_recovered_global.csv";

ClassMethod ImportData() As %Status
{
  do ..ImportDays()
  ;do ##class(%DeepSee.Utils).%BuildCube("USCovidDay")
}

ClassMethod ImportDays() As %Status
{
    s streamConfirmed=..GetStreamFromRepo(..#TSConfirmed,0)
    s streamDeaths=..GetStreamFromRepo(..#TSDeaths,0)
    d ..Import(streamConfirmed,streamDeaths)
}

ClassMethod GetStreamFromRepo(fn As %String,daily As %Boolean="0") As %CharacterStream
{
    //set SSLConfig="GitHub"   
    //do:'##class(Security.SSLConfigs).Exists(SSLConfig) ##class(Security.SSLConfigs).Create(SSLConfig)
    
    
    Set httprequest = ##class(%Net.HttpRequest).%New()
    Set httprequest.Server = "raw.githubusercontent.com"
    Set httprequest.Https = 1
    Set httprequest.SSLConfiguration = "default"
    set urlts="/CSSEGISandData/COVID-19/master/csse_covid_19_data/"
    set urlcsv="/CSSEGISandData/COVID-19/master/csse_covid_19_data/"
    $$$TOE(sc,httprequest.Get(urlts_fn))
    Set stream = httprequest.HttpResponse.Data
    
    Do httprequest.Reset()
    
    //TBD check for sc
    return stream
}

ClassMethod GetStreamFromFile(fn As %String) As %Stream
{
    set stream = ##Class(%Stream.FileCharacter).%New()
    set stream.LineTerminator = $Char(13,10)
    $$$TOE(sc,stream.LinkToFile(fn))
    //TBD check for sc
    return stream
}

ClassMethod Import(streamConfirmed As %CharacterStream, streamDeaths As %CharacterStream) As %Status
{
  // loading days
  // format=Province/State,Country/Region,Lat,Long,1/22/20,...
  ;W "in Import",!
  set line=streamConfirmed.ReadLine()
  ;W line,!
  set lineDeaths=streamDeaths.ReadLine()
  set day1h=$zdh("1/22/2020")  // day1 in horolog

  while 'streamConfirmed.AtEnd
  {
    set line=streamConfirmed.ReadLine()
   set lineDeaths=streamDeaths.ReadLine()
   
   Set $P(line,"""",2)=""
   Set $P(lineDeaths,"""",2)=""

   set place=##class(Place).%New()
   Set place.UID=$p(line,",",1)
   Set place.iso2=$p(line,",",2)
   Set place.iso3=$p(line,",",3)
   Set place.code3=$p(line,",",4)
   Set place.FIPS=$p(line,",",5)
   Set place.Admin2=$p(line,",",6)
   set place.ProvinceState=$p(line,",",7)
   set place.CountryRegion=$p(line,",",8)
   set place.Latitude=$p(line,",",9)
   set place.Longitude=$p(line,",",10)
   Set place.Population=$p(lineDeaths,",",12)
   set status=place.%Save()

   if $$$ISERR(status)
  {
   do $System.Status.DisplayError(status)
  } 
   set (ConfirmedPrev,DeathsPrev)=0
   for i=12:1:$L(line,",") {
       set day=##class(Day).%New()
       set day.Day=day1h+i-5
       if day.Day=+$H Quit 
       set day.Place=place 
       set day.Confirmed=$Piece(line,",",i)
       set day.ConfirmedNew=day.Confirmed-ConfirmedPrev
       
       set day.Deaths=$Piece(lineDeaths,",",i+1)
       set day.DeathsNew=day.Deaths-DeathsPrev
       
       set status=day.%Save()
       set ConfirmedPrev=day.Confirmed
       set DeathsPrev=day.Deaths
       if $$$ISERR(status) do $System.Status.DisplayError(status)
   }
  }
}


}
